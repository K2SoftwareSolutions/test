{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "clusterAttachedStorageType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_ZRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Premium_LRS"
        ]
      },
        "baseClusterName": {
            "type": "string",
            "defaultValue": "hdilabs",
            "metadata": {
                "description": "The base name used to create resources; spark-basename, kafka-basename, basename-vnet, basenamestore."
            }
        },
        "clusterLoginUserName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
            }
        },
        "clusterLoginPassword": {
            "type": "securestring",
            "defaultValue": "Abc!1234567890",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        },
        "clusterVersion": {
          "type": "string",
          "defaultValue": "3.6",
          "allowedValues": [
              "3.6"
          ],
          "metadata": {
            "description": "HDInsight cluster version."
          }
        },
        "clusterWorkerNodeCount": {
          "type": "int",
          "defaultValue": 2,
          "metadata": {
            "description": "The number of nodes in the HDInsight cluster."
          }
        },
        "clusterKind": {
          "type": "string",
          "defaultValue": "SPARK",
          "metadata": {
            "description": "The type of the HDInsight cluster to create."
          }
        },
        "sparkVersion": {
          "type": "string",
          "defaultValue": "2.1",
          "allowedValues": [
              "2.0",
              "2.1"
          ],
          "metadata": {
              "description": "Spark component version. Use 2.0 if the clusterVersion selected is 3.5, and 2.1 with 3.6"
          }
        },
        "sshUserName": {
            "type": "string",
            "defaultValue": "sshuser",
            "metadata": {
                "description": "These credentials can be used to remotely access the cluster."
            }
        },
        "sshPassword": {
            "type": "securestring",
            "defaultValue": "Abc!1234567890",
            "metadata": {
                "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
            }
        }
    },
  "variables": {
    "defaultApiVersion": "2015-05-01-preview",
    "clusterApiVersion": "2015-03-01-preview",
    "clusterWorkerNodeCount": "3",
    "disksPerWorkerNode": "2",
    "clusterVNetName": "[concat(parameters('baseClusterName'),'-vnet')]",
    "clusterStorageAccountName": "[concat(parameters('baseClusterName'),'store')]",
    "kafkaClusterName": "[concat('kafka-', parameters('baseClusterName'))]",
    "sparkClusterName": "[concat('spark-', parameters('baseClusterName'))]",
    "clusterVNetAddressSpace": "10.0.0.0/16",
    "clusterVNetSubnetName": "default",
    "clusterVNetSubnetAddressRange": "10.0.0.0/24"
  },
  "resources": [
    {
      "name": "[variables('clusterVNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('defaultApiVersion')]",
      "dependsOn": [ ],
      "tags": { },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('clusterVNetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('clusterVNetSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('clusterVNetSubnetAddressRange')]"
            }
          }
        ]
      }
    },
    {
      "name": "[variables('clusterStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "[parameters('clusterAttachedStorageType')]"
      },
      "dependsOn": [],
      "tags": {
        "displayname": "clusterattachedstorage"
       },
      "kind": "Storage"
    },
    {
      "apiVersion": "[variables('clusterApiVersion')]",
      "name": "[variables('kafkaClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('clusterStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
      ],
      "properties": {
        "clusterVersion": "[parameters('clusterVersion')]",
        "osType": "Linux",
        "tier": "standard",
        "clusterDefinition": {
          "kind": "kafka",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('clusterStorageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "[variables('kafkaClusterName')]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), variables('defaultApiVersion')).key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "minInstanceCount": 1,
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D12_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            },
            {
              "name": "workernode",
              "minInstanceCount": 1,
              "targetInstanceCount": "[variables('clusterWorkerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "Standard_D12_V2"
              },
              "dataDisksGroups": [
                {
                  "disksPerNode": "[variables('disksPerWorkerNode')]"
                }
              ],
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            },
            {
              "name": "zookeepernode",
              "minInstanceCount": 1,
              "targetInstanceCount": "3",
              "hardwareProfile": {
                "vmSize": "Medium"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            }
          ]
        }
      }
    },
    {
      "apiVersion": "[variables('clusterApiVersion')]",
      "name": "[variables('sparkClusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('clusterStorageAccountName'))]",
        "[concat('Microsoft.Network/virtualNetworks/',variables('clusterVNetName'))]"
      ],
      "properties": {
        "clusterVersion": "[parameters('clusterVersion')]",
        "osType": "Linux",
        "tier": "standard",
        "clusterDefinition": {
          "kind": "Spark",
          "componentVersion": {
            "Spark": "2.1"
        },
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('clusterStorageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "hdi-labs",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('clusterStorageAccountName')), variables('defaultApiVersion')).key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "minInstanceCount": 1,
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "Standard_D12_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            },
            {
              "name": "workernode",
              "minInstanceCount": 1,
              "targetInstanceCount": "[variables('clusterWorkerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "Standard_D12_V2"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              },
              "virtualNetworkProfile": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName'))]",
                "subnet": "[concat(resourceId('Microsoft.Network/virtualNetworks', variables('clusterVNetName')), '/subnets/', variables('clusterVNetSubnetName'))]"
              }
            }
          ]
        }
      }
    }
  ],
    "outputs": {
        "vnet": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks',variables('clusterVNetName')))]"
        },
        "kafkaCluster": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.HDInsight/clusters',variables('kafkaClusterName')))]"
        },
        "sparkCluster": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.HDInsight/clusters',variables('sparkClusterName')))]"
        }
    }
}